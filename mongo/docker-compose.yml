
services:
  
  # ==============================================
  #                    Роутер
  # ==============================================
  
  mongos-router:
    image: mongo:7
    container_name: mongos-router
    hostname: mongos-router
    depends_on:
      - mongo-config-server-1
      - mongo-config-server-2
      - mongo-config-server-3
    command: mongos --configdb config-rs/mongo-config-server-1:20001,mongo-config-server-2:20002,mongo-config-server-3:20003 --bind_ip_all
    ports:
      - "10001:27017"
        
  # ==============================================
  #              Config Servers (3 ноды)
  # ==============================================
  
  mongo-config-server-1:
    image: mongo:7
    container_name: mongo-config-server-1
    hostname: mongo-config-server-1
    command: [ "bash", "-c", "
        mongod --configsvr --replSet config-rs --bind_ip_all --port 20001 --dbpath /data/db &  
        sleep 10 &&
        mongosh --port 20001 --eval '
          rs.initiate({
              _id: \"config-rs\",
              configsvr: true,
              members: [
                { _id: 0, host: \"mongo-config-server-1:20001\" },
                { _id: 1, host: \"mongo-config-server-2:20002\" },
                { _id: 2, host: \"mongo-config-server-3:20003\" }
              ]
            });' &&
        wait
      " ]
    ports:
      - "20001:20001"

  mongo-config-server-2:
    image: mongo:7
    container_name: mongo-config-server-2
    hostname: mongo-config-server-2
    command: [ "--configsvr", "--replSet", "config-rs", "--bind_ip_all", "--port", "20002" ]
    ports:
      - "20002:20002"

  mongo-config-server-3:
    image: mongo:7
    container_name: mongo-config-server-3
    hostname: mongo-config-server-3
    command: [ "--configsvr", "--replSet", "config-rs", "--bind_ip_all", "--port", "20003" ]
    ports:
      - "20003:20003"      
  
  # ==============================================
  #                  Первый шард
  # ==============================================
  
  mongo-shard1-rs1:
    image: mongo:7
    container_name: mongo-shard1-rs1
    hostname: mongo-shard1-rs1
    command: [ "bash", "-c", "
        mongod --shardsvr --replSet shard1-rs --bind_ip_all --port 30001 --dbpath /data/db &  
        sleep 10 &&
        mongosh --port 30001 --eval '
          rs.initiate({
              _id: \"shard1-rs\",
              members: [
                { _id: 0, host: \"mongo-shard1-rs1:30001\" },
                { _id: 1, host: \"mongo-shard1-rs2:30002\" },
                { _id: 2, host: \"mongo-shard1-rs3:30003\" }
              ]
            });' &&
        wait
      " ]
    ports:
      - "30001:30001"

  mongo-shard1-rs2:
    image: mongo:7
    container_name: mongo-shard1-rs2
    hostname: mongo-shard1-rs2
    command: ["--shardsvr", "--replSet", "shard1-rs", "--bind_ip_all", "--port", "30002"]
    ports:
      - "30002:30002"

  mongo-shard1-rs3:
    image: mongo:7
    container_name: mongo-shard1-rs3
    hostname: mongo-shard1-rs3
    command: ["--shardsvr", "--replSet", "shard1-rs", "--bind_ip_all", "--port", "30003"]
    ports:
      - "30003:30003"
        
  # ==============================================
  #                  Второй шард
  # ==============================================
  
  mongo-shard2-rs1:
    image: mongo:7
    container_name: mongo-shard2-rs1
    hostname: mongo-shard2-rs1
    command: [ "bash", "-c", "
        mongod --shardsvr --replSet shard2-rs --bind_ip_all --port 40001 --dbpath /data/db &  
        sleep 10 &&
        mongosh --port 40001 --eval '
          rs.initiate({
              _id: \"shard2-rs\",
              members: [
                { _id: 0, host: \"mongo-shard2-rs1:40001\" },
                { _id: 1, host: \"mongo-shard2-rs2:40002\" },
                { _id: 2, host: \"mongo-shard2-rs3:40003\" }
              ]
            });' &&
        wait
      " ]
    ports:
      - "40001:40001"

  mongo-shard2-rs2:
    image: mongo:7
    container_name: mongo-shard2-rs2
    hostname: mongo-shard2-rs2
    command: ["--shardsvr", "--replSet", "shard2-rs", "--bind_ip_all", "--port", "40002"]
    ports:
      - "40002:40002"

  mongo-shard2-rs3:
    image: mongo:7
    container_name: mongo-shard2-rs3
    hostname: mongo-shard2-rs3
    command: ["--shardsvr", "--replSet", "shard2-rs", "--bind_ip_all", "--port", "40003"]
    ports:
      - "40003:40003"

  # ==============================================
  #                  Третий шард
  # ==============================================

  mongo-shard3-rs1:
    image: mongo:7
    container_name: mongo-shard3-rs1
    hostname: mongo-shard3-rs1
    command: [ "bash", "-c", "
        mongod --shardsvr --replSet shard3-rs --bind_ip_all --port 50001 --dbpath /data/db &  
        sleep 10 &&
        mongosh --port 50001 --eval '
          rs.initiate({
              _id: \"shard3-rs\",
              members: [
                { _id: 0, host: \"mongo-shard3-rs1:50001\" },
                { _id: 1, host: \"mongo-shard3-rs2:50002\" },
                { _id: 2, host: \"mongo-shard3-rs3:50003\" }
              ]
            });' &&
        wait
      " ]
    ports:
      - "50001:50001"

  mongo-shard3-rs2:
    image: mongo:7
    container_name: mongo-shard3-rs2
    hostname: mongo-shard3-rs2
    command: ["--shardsvr", "--replSet", "shard3-rs", "--bind_ip_all", "--port", "50002"]
    ports:
      - "50002:50002"

  mongo-shard3-rs3:
    image: mongo:7
    container_name: mongo-shard3-rs3
    hostname: mongo-shard3-rs3
    command: ["--shardsvr", "--replSet", "shard3-rs", "--bind_ip_all", "--port", "50003"]
    ports:
      - "50003:50003"